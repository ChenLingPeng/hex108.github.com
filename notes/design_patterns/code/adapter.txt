class OldClass{
public:
    void old_func(){
        ...
    }
};

class NewInterface{
public:
    virtual void new_func(){};
};

class Adapter: public NewInterface{
private:
    OldClass *old_object;

public:
    Adapter(OldClass *old): old_object(old){}

    void new_func(){
        if(old_object != nullptr)
            old_object.old_func();
    }
};

// use case
OldClass old_object;
NewInterface *p = new Adapter(&old_object);
p->new_func();
